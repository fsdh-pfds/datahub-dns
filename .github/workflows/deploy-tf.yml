name: Terraform Apply

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - "**/*.tf"

permissions:
  id-token: write # Required for OIDC token exchange
  contents: read

concurrency:
  group: terraform-deployment
  cancel-in-progress: false

jobs:
  build_and_deploy:
    runs-on:
      - dns
    environment: dns-tfservice-worker

    steps:
      - name: Check out source code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Login to Azure (OIDC)
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2
        with:
          client-id: ${{ secrets.AZ_APPLICATION_ID }}
          tenant-id: ${{ secrets.AZ_TENANT_ID }}
          subscription-id: ${{ secrets.AZ_SUBSCRIPTION_ID }}

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "22"

      - name: Install Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3

      - name: Run Terraform
        run: |
          echo "Initializing Terraform ..."
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TF_DNS_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.TF_BACKEND_CONTAINER }}" \
            -backend-config="key=${{ secrets.TF_BACKEND_STATE }}" \
            -backend-config="subscription_id=${{ secrets.AZ_SUBSCRIPTION_ID }}"

          echo "Planning Terraform changes..."
          terraform plan \
            -var="azure_client_id=${{ secrets.AZ_APPLICATION_ID }}" \
            -var="azure_tenant_id=${{ secrets.AZ_TENANT_ID }}" \
            -var="azure_subscription_id=${{ secrets.AZ_SUBSCRIPTION_ID }}" \
            -var="resource_group_name=${{ secrets.TF_DNS_RESOURCE_GROUP }}" \
            -var="storage_account_name=${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }}" \
            -var="container_name=${{ secrets.TF_BACKEND_CONTAINER }}" \
            -var="backend_state_name=${{ secrets.TF_BACKEND_STATE }}" \
            -out=tfplan

          echo "Applying Terraform changes..."
          terraform apply -auto-approve tfplan
