name: Dev Deployment

on:
  push:
    branches: ["*"]
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

jobs:
  build_and_deploy_dev:
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Login to Azure (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true

      - name: Download Terraform state from Azure Storage
        run: |
          echo "Downloading Terraform state from Azure Storage..."
          az storage blob download \
            --account-name ${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }} \
            --container-name ${{ secrets.TF_BACKEND_CONTAINER }} \
            --name ${{ secrets.TF_BACKEND_STATE }} \
            --file ./${{ secrets.TF_BACKEND_STATE }} \
            --auth-mode login
        env:
          AZURE_HTTP_USER_AGENT: "GitHubAction"

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Run Terraform
        run: |
          echo "Initializing Terraform..."
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.TF_BACKEND_CONTAINER }}" \
            -backend-config="key=${{ secrets.TF_BACKEND_STATE }}" \
            -backend-config="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}"

          echo "Planning Terraform changes..."
          terraform -chdir=dns plan

          echo "Applying Terraform changes..."
          terraform -chdir=dns apply -auto-approve
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_resource_group_name: ${{ secrets.TF_BACKEND_RESOURCE_GROUP }}
