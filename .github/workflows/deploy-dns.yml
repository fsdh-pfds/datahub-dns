name: Dev Deployment

on:
  push:
    branches: ["*"]

permissions:
  id-token: write  # Required for OIDC token exchange
  contents: read

jobs:
  build_and_deploy_dev:
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Login to Azure (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Run Terraform
        run: |
          echo "Initializing Terraform in dns directory..."
          terraform -chdir=dns init -upgrade \
            -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.TF_BACKEND_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.TF_BACKEND_CONTAINER }}" \
            -backend-config="key=${{ secrets.TF_BACKEND_STATE }}" \
            -backend-config="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}"

          echo "Planning Terraform changes..."
          terraform -chdir=dns plan

          echo "Applying Terraform changes..."
          terraform -chdir=dns apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_azure_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_resource_group_name: ${{ secrets.TF_BACKEND_RESOURCE_GROUP }}
